version: 1.0
frontend:
  phases:
    preBuild:
      commands:
        - nvm install 22.18.0
        - npm install --quiet --global @expo/cli
        - >
          if [ -f yarn.lock ]; then
            yarn install --frozen-lockfile
          elif [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
            npm ci
          else
            npm install
          fi
        - pip install awscli --upgrade --user
        - 'export PATH=~/.local/bin:$PATH'
        # Detect branch and set environment variables (defaults can be overridden in Amplify Console)
        - |
          if [ "$AWS_BRANCH" = "main" ]; then
            if [ -z "$AMPLIFY_SHOW_ALL_EVENTS" ]; then export AMPLIFY_SHOW_ALL_EVENTS="true"; fi
            if [ -z "$AMPLIFY_EVENT_ID" ]; then export AMPLIFY_EVENT_ID="default"; fi
            if [ -z "$AMPLIFY_EVENT_DOMAIN" ]; then export AMPLIFY_EVENT_DOMAIN="hashpass.tech"; fi
          elif [ "$AWS_BRANCH" = "bsl2025" ]; then
            if [ -z "$AMPLIFY_SHOW_ALL_EVENTS" ]; then export AMPLIFY_SHOW_ALL_EVENTS="false"; fi
            if [ -z "$AMPLIFY_EVENT_ID" ]; then export AMPLIFY_EVENT_ID="bsl2025"; fi
            if [ -z "$AMPLIFY_EVENT_DOMAIN" ]; then export AMPLIFY_EVENT_DOMAIN="bsl2025.hashpass.tech"; fi
          else
            if [ -z "$AMPLIFY_SHOW_ALL_EVENTS" ]; then export AMPLIFY_SHOW_ALL_EVENTS="false"; fi
            if [ -z "$AMPLIFY_EVENT_ID" ]; then export AMPLIFY_EVENT_ID="bsl2025"; fi
            if [ -z "$AMPLIFY_EVENT_DOMAIN" ]; then export AMPLIFY_EVENT_DOMAIN="bsl2025.hashpass.tech"; fi
          fi
        - 'echo "Building for branch: $AWS_BRANCH"'
        - 'echo "Event ID: $AMPLIFY_EVENT_ID"'
        - 'echo "Show all events: $AMPLIFY_SHOW_ALL_EVENTS"'
    build:
      commands:
        - rm -rf dist
        - mkdir -p dist/client/_expo/functions/api/bslatam
        - 'npm run build:web'
        - cp -r dist/server/* dist/client/
        - mkdir -p amplify/backend/function/bslApi/src/server/_expo/functions
        - rm -rf amplify/backend/function/bslApi/src/server/_expo/functions/api || true
        - cp -r dist/server/_expo/functions/api amplify/backend/function/bslApi/src/server/_expo/functions/
        - mkdir -p dist/client/api/bslatam
        - 'echo "{\"type\": \"module\"}" > dist/client/api/package.json'
        - |
          for file in app/api/bslatam/*+api.ts; do
            base=$(basename "$file" "+api.ts")
            mkdir -p "dist/client/api/bslatam/$base"
            cat > "dist/client/api/bslatam/$base/index.js" << 'ENDOFFILE'
          import { handler } from '../../../../../app/api/bslatam/PLACEHOLDER+api';
          export default async (req, res) => {
            try {
              const result = await handler(req, res);
              if (result) {
                res.status(200).json(result);
              }
            } catch (error) {
              console.error('API Error' + ' ' + error);
              res.status(500).json({ error: 'Internal Server Error' });
            }
          };
          ENDOFFILE
            sed -i "s/PLACEHOLDER/$base/g" "dist/client/api/bslatam/$base/index.js"
            echo "Created API handler at dist/client/api/bslatam/$base/index.js"
          done
        - 'echo "<!-- Build timestamp: $(date) -->" >> dist/client/index.html'
        - 'echo "=== API files in dist/client/_expo/functions/api/bslatam/ ==="'
        - ls -la dist/client/_expo/functions/api/bslatam/ || echo "No API files found"
        - 'echo "=== Contents of dist/client/ ==="'
        - ls -la dist/client/
        - ls -la dist/client/index.html
  artifacts:
    baseDirectory: dist/client
    files:
      - '**/*'
    customHeaders:
      - pattern: '_expo/static/**/*'
        headers:
          - key: Cache-Control
            value: 'public, max-age=31536000, immutable'
      - pattern: 'index.html'
        headers:
          - key: Cache-Control
            value: 'no-cache, no-store, must-revalidate'
          - key: Pragma
            value: 'no-cache'
          - key: Expires
            value: '0'
      - pattern: '**/*.html'
        headers:
          - key: Cache-Control
            value: 'no-cache, no-store, must-revalidate'
          - key: Pragma
            value: 'no-cache'
          - key: Expires
            value: '0'
      - pattern: '**/*.js'
        headers:
          - key: Cache-Control
            value: 'public, max-age=31536000, immutable'
  cache:
    paths:
      - node_modules/**/*
      - $(npm root --global)/**/*
redirects:
  - source: '/api/bslatam/agenda/'
    status: 200
    target: '/api/bslatam/agenda/index.js'
  - source: '/api/bslatam/agenda-status/'
    status: 200
    target: '/api/bslatam/agenda-status/index.js'
  - source: '/sw.js'
    status: 200
    target: '/sw.js'
  - source: '/_expo/*'
    status: 200
    target: '/_expo/'
  - source: '/events/bsl2025/*'
    status: 200
    target: '/index.html'
  - source: '/events/*'
    status: 200
    target: '/index.html'
  - source: '/auth/*'
    status: 200
    target: '/index.html'
  - source: '/dashboard/*'
    status: 200
    target: '/index.html'
  - source: '/'
    status: 200
    target: '/index.html'
  - source: '/<*>'
    status: 200
    target: '/index.html'
customErrorResponses:
  - errorCode: 404
    responsePagePath: '/index.html'
    responseCode: 200
    errorCachingMinTTL: 0
